class Solution 
{
   public static double findMedianSortedArrays(int[] a, int[] b) 
{
    if(b.length<a.length) return findMedianSortedArrays(b,a);
    int m = a.length;
    int n = b.length;
    int min = 0;
    int max = m;
    while(min<=max){
    int cut1 = (max+min)/2;
    int cut2 = (m+n+1)/2 - cut1;
    int l1 = (cut1 == 0)? Integer.MIN_VALUE:a[cut1-1];
    int l2 = (cut2 == 0)? Integer.MIN_VALUE:b[cut2-1];
    int r1 = (cut1 == m)? Integer.MAX_VALUE:a[cut1];
    int r2 = (cut2 == n)? Integer.MAX_VALUE:b[cut2];
    if(l1<=r2 && l2<=r1)
    {
         if((m+n)%2 != 0)
            return Math.max(l1,l2);
        else 
            return (Math.max(l1,l2)+Math.min(r1,r2))/2.0;
    }
    else if(l1>r2)
    {
          max = cut1-1;
    }
    else
    {
        min = cut1+1;
    }
    }
    return 0.0;
}
}
